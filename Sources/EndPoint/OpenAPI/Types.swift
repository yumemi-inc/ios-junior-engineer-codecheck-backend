// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import Foundation
#else
import Foundation
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Get fortune for given person
    ///
    /// This endpoint returns the fortune of a person based on their name, birthday, and blood type, as well as the current date.
    ///
    /// - Remark: HTTP `POST /my_fortune`.
    /// - Remark: Generated from `#/paths//my_fortune/post(post-my-fortune)`.
    func post_hyphen_my_hyphen_fortune(_ input: Operations.post_hyphen_my_hyphen_fortune.Input) async throws
        -> Operations.post_hyphen_my_hyphen_fortune.Output
}
/// Server URLs defined in the OpenAPI document.
public enum Servers {
    public static func server1() throws -> URL {
        try URL(validatingOpenAPIServerURL: "https://yumemi-ios-junior-engineer-codecheck.app.swift.cloud")
    }
}
/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/MyFortuneRequest`.
        public struct MyFortuneRequest: Codable, Hashable, Sendable {
            /// Target's name.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/name`.
            public var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/birthday`.
            public struct birthdayPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/birthday/value1`.
                public var value1: Components.Schemas.YearMonthDay
                /// Target's birthday.
                ///
                /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/birthday/value2`.
                public var value2: OpenAPIRuntime.OpenAPIValueContainer
                /// Creates a new `birthdayPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                ///   - value2: Target's birthday.
                public init(value1: Components.Schemas.YearMonthDay, value2: OpenAPIRuntime.OpenAPIValueContainer) {
                    self.value1 = value1
                    self.value2 = value2
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                    value2 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                    try value2.encode(to: encoder)
                }
            }
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/birthday`.
            public var birthday: Components.Schemas.MyFortuneRequest.birthdayPayload
            /// Target's blood type.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/blood_type`.
            @frozen public enum blood_typePayload: String, Codable, Hashable, Sendable {
                case a = "a"
                case b = "b"
                case ab = "ab"
                case o = "o"
            }
            /// Target's blood type.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/blood_type`.
            public var blood_type: Components.Schemas.MyFortuneRequest.blood_typePayload
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/today`.
            public struct todayPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/today/value1`.
                public var value1: Components.Schemas.YearMonthDay
                /// Today's date.
                ///
                /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/today/value2`.
                public var value2: OpenAPIRuntime.OpenAPIValueContainer
                /// Creates a new `todayPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                ///   - value2: Today's date.
                public init(value1: Components.Schemas.YearMonthDay, value2: OpenAPIRuntime.OpenAPIValueContainer) {
                    self.value1 = value1
                    self.value2 = value2
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                    value2 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                    try value2.encode(to: encoder)
                }
            }
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/today`.
            public var today: Components.Schemas.MyFortuneRequest.todayPayload
            /// Creates a new `MyFortuneRequest`.
            ///
            /// - Parameters:
            ///   - name: Target's name.
            ///   - birthday:
            ///   - blood_type: Target's blood type.
            ///   - today:
            public init(
                name: Swift.String,
                birthday: Components.Schemas.MyFortuneRequest.birthdayPayload,
                blood_type: Components.Schemas.MyFortuneRequest.blood_typePayload,
                today: Components.Schemas.MyFortuneRequest.todayPayload
            ) {
                self.name = name
                self.birthday = birthday
                self.blood_type = blood_type
                self.today = today
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case birthday
                case blood_type
                case today
            }
        }
        /// - Remark: Generated from `#/components/schemas/MyFortuneResponse`.
        public struct MyFortuneResponse: Codable, Hashable, Sendable {
            /// Result prefecture's name.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/name`.
            public var name: Swift.String
            /// Result prefecture's brief instruction.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/brief`.
            public var brief: Swift.String
            /// Result prefecture's capital city.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/capital`.
            public var capital: Swift.String
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/citizen_day`.
            public struct citizen_dayPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/citizen_day/value1`.
                public var value1: Components.Schemas.MonthDay
                /// Result prefecture's citizen date (if it has one).
                ///
                /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/citizen_day/value2`.
                public var value2: OpenAPIRuntime.OpenAPIValueContainer
                /// Creates a new `citizen_dayPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                ///   - value2: Result prefecture's citizen date (if it has one).
                public init(value1: Components.Schemas.MonthDay, value2: OpenAPIRuntime.OpenAPIValueContainer) {
                    self.value1 = value1
                    self.value2 = value2
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                    value2 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                    try value2.encode(to: encoder)
                }
            }
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/citizen_day`.
            public var citizen_day: Components.Schemas.MyFortuneResponse.citizen_dayPayload?
            /// Whether result prefecture has a coast line or not.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/has_coast_line`.
            public var has_coast_line: Swift.Bool
            /// Result prefecture's logo's URL.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/logo_url`.
            public var logo_url: Swift.String
            /// Creates a new `MyFortuneResponse`.
            ///
            /// - Parameters:
            ///   - name: Result prefecture's name.
            ///   - brief: Result prefecture's brief instruction.
            ///   - capital: Result prefecture's capital city.
            ///   - citizen_day:
            ///   - has_coast_line: Whether result prefecture has a coast line or not.
            ///   - logo_url: Result prefecture's logo's URL.
            public init(
                name: Swift.String,
                brief: Swift.String,
                capital: Swift.String,
                citizen_day: Components.Schemas.MyFortuneResponse.citizen_dayPayload? = nil,
                has_coast_line: Swift.Bool,
                logo_url: Swift.String
            ) {
                self.name = name
                self.brief = brief
                self.capital = capital
                self.citizen_day = citizen_day
                self.has_coast_line = has_coast_line
                self.logo_url = logo_url
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case brief
                case capital
                case citizen_day
                case has_coast_line
                case logo_url
            }
        }
        /// - Remark: Generated from `#/components/schemas/YearMonthDay`.
        public struct YearMonthDay: Codable, Hashable, Sendable {
            /// Year number
            ///
            /// - Remark: Generated from `#/components/schemas/YearMonthDay/year`.
            public var year: Swift.Int
            /// Month number
            ///
            /// - Remark: Generated from `#/components/schemas/YearMonthDay/month`.
            public var month: Swift.Int
            /// Day number
            ///
            /// - Remark: Generated from `#/components/schemas/YearMonthDay/day`.
            public var day: Swift.Int
            /// Creates a new `YearMonthDay`.
            ///
            /// - Parameters:
            ///   - year: Year number
            ///   - month: Month number
            ///   - day: Day number
            public init(year: Swift.Int, month: Swift.Int, day: Swift.Int) {
                self.year = year
                self.month = month
                self.day = day
            }
            public enum CodingKeys: String, CodingKey {
                case year
                case month
                case day
            }
        }
        /// - Remark: Generated from `#/components/schemas/MonthDay`.
        public struct MonthDay: Codable, Hashable, Sendable {
            /// Month number
            ///
            /// - Remark: Generated from `#/components/schemas/MonthDay/month`.
            public var month: Swift.Int
            /// Day number
            ///
            /// - Remark: Generated from `#/components/schemas/MonthDay/day`.
            public var day: Swift.Int
            /// Creates a new `MonthDay`.
            ///
            /// - Parameters:
            ///   - month: Month number
            ///   - day: Day number
            public init(month: Swift.Int, day: Swift.Int) {
                self.month = month
                self.day = day
            }
            public enum CodingKeys: String, CodingKey {
                case month
                case day
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}
/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Get fortune for given person
    ///
    /// This endpoint returns the fortune of a person based on their name, birthday, and blood type, as well as the current date.
    ///
    /// - Remark: HTTP `POST /my_fortune`.
    /// - Remark: Generated from `#/paths//my_fortune/post(post-my-fortune)`.
    public enum post_hyphen_my_hyphen_fortune {
        public static let id: String = "post-my-fortune"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/my_fortune/POST/header`.
            public struct Headers: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/my_fortune/POST/header/API-Version`.
                @frozen public enum API_hyphen_VersionPayload: String, Codable, Hashable, Sendable { case v1 = "v1" }
                /// API version you'd like to use in your sending request. Currently only `v1` available. If you don't attach this parameter in your header, system will use the latest API version.
                ///
                /// - Remark: Generated from `#/paths/my_fortune/POST/header/API-Version`.
                public var API_hyphen_Version:
                    Operations.post_hyphen_my_hyphen_fortune.Input.Headers.API_hyphen_VersionPayload?
                public var accept:
                    [OpenAPIRuntime.AcceptHeaderContentType<
                        Operations.post_hyphen_my_hyphen_fortune.AcceptableContentType
                    >]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - API_hyphen_Version: API version you'd like to use in your sending request. Currently only `v1` available. If you don't attach this parameter in your header, system will use the latest API version.
                ///   - accept:
                public init(
                    API_hyphen_Version: Operations.post_hyphen_my_hyphen_fortune.Input.Headers
                        .API_hyphen_VersionPayload? = nil,
                    accept: [OpenAPIRuntime.AcceptHeaderContentType<
                        Operations.post_hyphen_my_hyphen_fortune.AcceptableContentType
                    >] = .defaultValues()
                ) {
                    self.API_hyphen_Version = API_hyphen_Version
                    self.accept = accept
                }
            }
            public var headers: Operations.post_hyphen_my_hyphen_fortune.Input.Headers
            /// - Remark: Generated from `#/paths/my_fortune/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/my_fortune/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.MyFortuneRequest)
            }
            public var body: Operations.post_hyphen_my_hyphen_fortune.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.post_hyphen_my_hyphen_fortune.Input.Headers = .init(),
                body: Operations.post_hyphen_my_hyphen_fortune.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/my_fortune/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/my_fortune/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.MyFortuneResponse)
                }
                /// Received HTTP response body
                public var body: Operations.post_hyphen_my_hyphen_fortune.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_hyphen_my_hyphen_fortune.Output.Ok.Body) { self.body = body }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//my_fortune/post(post-my-fortune)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_hyphen_my_hyphen_fortune.Output.Ok)
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(String)
            public init?(rawValue: String) {
                switch rawValue.lowercased() {
                case "application/json": self = .json
                default: self = .other(rawValue)
                }
            }
            public var rawValue: String {
                switch self {
                case let .other(string): return string
                case .json: return "application/json"
                }
            }
            public static var allCases: [Self] { [.json] }
        }
    }
}
