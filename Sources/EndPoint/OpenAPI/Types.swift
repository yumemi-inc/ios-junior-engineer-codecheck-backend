// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import Foundation
#else
import Foundation
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Operation `post-my-fortune` performs `POST` on `/my_fortune`
    ///
    /// - Remark: Generated from the `post-my-fortune` operation.
    func post_my_fortune(_ input: Operations.post_my_fortune.Input) async throws
        -> Operations.post_my_fortune.Output
}
/// Server URLs defined in the OpenAPI document.
public enum Servers {
    public static func server1() throws -> URL {
        try URL(
            validatingOpenAPIServerURL:
                "https://yumemi-ios-junior-engineer-codecheck.app.swift.cloud"
        )
    }
}
/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/MyFortuneRequest`.
        public struct MyFortuneRequest: Codable, Equatable, Hashable, Sendable {
            /// Target's name.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/name`.
            public var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/birthday`.
            public var birthday: Components.Schemas.YearMonthDay
            /// Target's blood type.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/blood_type`.
            @frozen
            public enum blood_typePayload: RawRepresentable, Codable, Equatable, Hashable, Sendable,
                _AutoLosslessStringConvertible, CaseIterable
            {
                case a
                case b
                case ab
                case o
                /// Parsed a raw value that was not defined in the OpenAPI document.
                case undocumented(String)
                public init?(rawValue: String) {
                    switch rawValue {
                    case "a": self = .a
                    case "b": self = .b
                    case "ab": self = .ab
                    case "o": self = .o
                    default: self = .undocumented(rawValue)
                    }
                }
                public var rawValue: String {
                    switch self {
                    case let .undocumented(string): return string
                    case .a: return "a"
                    case .b: return "b"
                    case .ab: return "ab"
                    case .o: return "o"
                    }
                }
                public static var allCases: [blood_typePayload] { [.a, .b, .ab, .o] }
            }
            /// Target's blood type.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/blood_type`.
            public var blood_type: Components.Schemas.MyFortuneRequest.blood_typePayload
            /// - Remark: Generated from `#/components/schemas/MyFortuneRequest/today`.
            public var today: Components.Schemas.YearMonthDay
            /// Creates a new `MyFortuneRequest`.
            ///
            /// - Parameters:
            ///   - name: Target's name.
            ///   - birthday:
            ///   - blood_type: Target's blood type.
            ///   - today:
            public init(
                name: Swift.String,
                birthday: Components.Schemas.YearMonthDay,
                blood_type: Components.Schemas.MyFortuneRequest.blood_typePayload,
                today: Components.Schemas.YearMonthDay
            ) {
                self.name = name
                self.birthday = birthday
                self.blood_type = blood_type
                self.today = today
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case birthday
                case blood_type
                case today
            }
        }
        /// - Remark: Generated from `#/components/schemas/MyFortuneResponse`.
        public struct MyFortuneResponse: Codable, Equatable, Hashable, Sendable {
            /// Result prefecture's name.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/name`.
            public var name: Swift.String
            /// Result prefecture's brief instruction.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/brief`.
            public var brief: Swift.String
            /// Result prefecture's capital city.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/capital`.
            public var capital: Swift.String
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/citizen_day`.
            public var citizen_day: Components.Schemas.MonthDay?
            /// Whether result prefecture has a coast line or not.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/has_coast_line`.
            public var has_coast_line: Swift.Bool
            /// Result prefecture's logo's URL.
            ///
            /// - Remark: Generated from `#/components/schemas/MyFortuneResponse/logo_url`.
            public var logo_url: Swift.String
            /// Creates a new `MyFortuneResponse`.
            ///
            /// - Parameters:
            ///   - name: Result prefecture's name.
            ///   - brief: Result prefecture's brief instruction.
            ///   - capital: Result prefecture's capital city.
            ///   - citizen_day:
            ///   - has_coast_line: Whether result prefecture has a coast line or not.
            ///   - logo_url: Result prefecture's logo's URL.
            public init(
                name: Swift.String,
                brief: Swift.String,
                capital: Swift.String,
                citizen_day: Components.Schemas.MonthDay? = nil,
                has_coast_line: Swift.Bool,
                logo_url: Swift.String
            ) {
                self.name = name
                self.brief = brief
                self.capital = capital
                self.citizen_day = citizen_day
                self.has_coast_line = has_coast_line
                self.logo_url = logo_url
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case brief
                case capital
                case citizen_day
                case has_coast_line
                case logo_url
            }
        }
        /// - Remark: Generated from `#/components/schemas/YearMonthDay`.
        public struct YearMonthDay: Codable, Equatable, Hashable, Sendable {
            /// Year number
            ///
            /// - Remark: Generated from `#/components/schemas/YearMonthDay/year`.
            public var year: Swift.Int
            /// Month number
            ///
            /// - Remark: Generated from `#/components/schemas/YearMonthDay/month`.
            public var month: Swift.Int
            /// Day number
            ///
            /// - Remark: Generated from `#/components/schemas/YearMonthDay/day`.
            public var day: Swift.Int
            /// Creates a new `YearMonthDay`.
            ///
            /// - Parameters:
            ///   - year: Year number
            ///   - month: Month number
            ///   - day: Day number
            public init(year: Swift.Int, month: Swift.Int, day: Swift.Int) {
                self.year = year
                self.month = month
                self.day = day
            }
            public enum CodingKeys: String, CodingKey {
                case year
                case month
                case day
            }
        }
        /// - Remark: Generated from `#/components/schemas/MonthDay`.
        public struct MonthDay: Codable, Equatable, Hashable, Sendable {
            /// Month number
            ///
            /// - Remark: Generated from `#/components/schemas/MonthDay/month`.
            public var month: Swift.Int
            /// Day number
            ///
            /// - Remark: Generated from `#/components/schemas/MonthDay/day`.
            public var day: Swift.Int
            /// Creates a new `MonthDay`.
            ///
            /// - Parameters:
            ///   - month: Month number
            ///   - day: Day number
            public init(month: Swift.Int, day: Swift.Int) {
                self.month = month
                self.day = day
            }
            public enum CodingKeys: String, CodingKey {
                case month
                case day
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}
/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Operation `post-my-fortune` performs `POST` on `/my_fortune`
    ///
    /// - Remark: Generated from the `post-my-fortune` operation.
    public enum post_my_fortune {
        public static let id: String = "post-my-fortune"
        public struct Input: Sendable, Equatable, Hashable {
            public struct Path: Sendable, Equatable, Hashable {
                /// Creates a new `Path`.
                public init() {}
            }
            public var path: Operations.post_my_fortune.Input.Path
            public struct Query: Sendable, Equatable, Hashable {
                /// Creates a new `Query`.
                public init() {}
            }
            public var query: Operations.post_my_fortune.Input.Query
            public struct Headers: Sendable, Equatable, Hashable {
                /// - Remark: Generated from `#/paths/my_fortune/POST/header/API-Version`.
                @frozen
                public enum API_VersionPayload: RawRepresentable, Codable, Equatable, Hashable,
                    Sendable, _AutoLosslessStringConvertible, CaseIterable
                {
                    case v1
                    /// Parsed a raw value that was not defined in the OpenAPI document.
                    case undocumented(String)
                    public init?(rawValue: String) {
                        switch rawValue {
                        case "v1": self = .v1
                        default: self = .undocumented(rawValue)
                        }
                    }
                    public var rawValue: String {
                        switch self {
                        case let .undocumented(string): return string
                        case .v1: return "v1"
                        }
                    }
                    public static var allCases: [API_VersionPayload] { [.v1] }
                }
                public var API_Version: Operations.post_my_fortune.Input.Headers.API_VersionPayload?
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - API_Version:
                public init(
                    API_Version: Operations.post_my_fortune.Input.Headers.API_VersionPayload? = nil
                ) { self.API_Version = API_Version }
            }
            public var headers: Operations.post_my_fortune.Input.Headers
            public struct Cookies: Sendable, Equatable, Hashable {
                /// Creates a new `Cookies`.
                public init() {}
            }
            public var cookies: Operations.post_my_fortune.Input.Cookies
            public enum Body: Sendable, Equatable, Hashable {
                case json(Components.Schemas.MyFortuneRequest)
            }
            public var body: Operations.post_my_fortune.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - cookies:
            ///   - body:
            public init(
                path: Operations.post_my_fortune.Input.Path = .init(),
                query: Operations.post_my_fortune.Input.Query = .init(),
                headers: Operations.post_my_fortune.Input.Headers = .init(),
                cookies: Operations.post_my_fortune.Input.Cookies = .init(),
                body: Operations.post_my_fortune.Input.Body
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.cookies = cookies
                self.body = body
            }
        }
        public enum Output: Sendable, Equatable, Hashable {
            public struct Ok: Sendable, Equatable, Hashable {
                public struct Headers: Sendable, Equatable, Hashable {
                    /// Creates a new `Headers`.
                    public init() {}
                }
                /// Received HTTP response headers
                public var headers: Operations.post_my_fortune.Output.Ok.Headers
                public enum Body: Sendable, Equatable, Hashable {
                    case json(Components.Schemas.MyFortuneResponse)
                }
                /// Received HTTP response body
                public var body: Operations.post_my_fortune.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                public init(
                    headers: Operations.post_my_fortune.Output.Ok.Headers = .init(),
                    body: Operations.post_my_fortune.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// Success
            ///
            /// - Remark: Generated from `#/paths//my_fortune/post(post-my-fortune)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_my_fortune.Output.Ok)
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
}
